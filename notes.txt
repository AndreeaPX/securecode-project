Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process
venv\Scripts\activate
python manage.py runserver_plus --cert-file certs/localhost.pem --key-file certs/localhost-key.pem

psql -U postgres -d secure_code_db -h localhost

Goal	Command
🔍 List all tables	\dt
🔍 Describe a table	\d users_user (or any table name)
🔍 Show all databases	\l
🔍 Switch DB	\c secure_code_db
🔍 Query data (like SELECT)	SELECT * FROM users_user;
🔍 See invitations	SELECT * FROM users_userinvitation;
🔍 Exit psql	\q

from ai_models.trainer import train_and_save_model
train_and_save_model()

# --- Imports ---
from users.models.tests import TestAssignment, Test
from ai_models.balanced_batch_generator import create_balanced_training_batch
from users.models import User

# --- Load student ---
student = User.objects.get(email="neagu.ionut20@stud.ase.ro")

# --- Load test ---
test = Test.objects.get(name="AI TEST FOR TRAINING")

# --- (Optional) Clean old attempts ---
TestAssignment.objects.filter(student=student, test=test).delete()

# --- Generate synthetic data ---
create_balanced_training_batch(student, test, num_per_type=25)



QJW67L77D76VPLKCBE8EN5LX



from users.models.tests import TestAssignment
from ai_models.evaluation_engine import evaluate_assignment

aid = 584

assignment = TestAssignment.objects.get(id=aid)
assignment.ai_evaluated_at = None
assignment.save(update_fields=["ai_evaluated_at"])
evaluate_assignment(assignment)